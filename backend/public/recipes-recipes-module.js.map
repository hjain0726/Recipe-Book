{"version":3,"sources":["webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.css","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-start/recipe-start.component.css","webpack:///./src/app/recipes/recipe-start/recipe-start.component.html","webpack:///./src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///./src/app/recipes/recipe.model.ts","webpack:///./src/app/recipes/recipes-routing.module.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.module.ts"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (this.authService.isAuthenticated()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/signin']);\r\n            return false;\r\n        }\r\n\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <img [src]=\\\"recipe.imagePath\\\" alt=\\\"{{recipe.name}}\\\" class=\\\"img-responsive\\\" style=\\\"max-height:300px\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <h1>{{recipe.name}}</h1>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <div class=\\\"btn-group\\\" appDropdown>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">Manage Recipe <span\\r\\n                    class=\\\"caret\\\"></span></button>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n                <li><a (click)=\\\"onAddToShoppingList()\\\" style=\\\"cursor: pointer;\\\">To shopping List</a></li>\\r\\n                <li><a (click)=\\\"onEditRecipe()\\\" style=\\\"cursor: pointer;\\\">Edit Recipe</a></li>\\r\\n                <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onDeleteRecipe()\\\">Delete Recipe</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        {{recipe.description}}\\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let ingredient of recipe.ingredients\\\">\\r\\n                {{ingredient.name}} - {{ingredient.amount}}\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Recipe } from '../recipe.model';\r\nimport { RecipeService } from '../recipe.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-recipe-detail',\r\n    templateUrl: './recipe-detail.component.html',\r\n    styleUrls: ['./recipe-detail.component.css']\r\n})\r\nexport class RecipeDetailComponent implements OnInit {\r\n    recipe;\r\n    id: number;\r\n\r\n    constructor(private recipeService: RecipeService,\r\n        private route: ActivatedRoute,\r\n        private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe((params: Params) => {\r\n            this.id = +params['id'];\r\n            this.recipe = this.recipeService.getRecipe(this.id);\r\n        });\r\n    }\r\n    onAddToShoppingList() {\r\n        this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\r\n    }\r\n    onEditRecipe() {\r\n        this.router.navigate(['edit'], { relativeTo: this.route });\r\n    }\r\n    onDeleteRecipe() {\r\n        this.recipeService.deleteRecipe(this.id);\r\n        this.router.navigate(['/recipes']);\r\n    }\r\n}","module.exports = \"input.ng-invalid.ng-touched,\\r\\ntextarea.ng-invalid.ng-touched{\\r\\n    border:1px solid red;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!recipeForm.valid\\\"\\n            *ngIf=\\\"!editMode\\\">Save</button>&nbsp;&nbsp;\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!recipeForm.valid\\\"\\n            *ngIf=\\\"editMode\\\">Update</button>&nbsp;&nbsp;\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n         <br><br> <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"imagePath\\\">Image URL</label>\\n            <input type=\\\"text\\\" id=\\\"imagePath\\\" formControlName=\\\"imagePath\\\" class=\\\"form-control\\\" #imagePath>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <img [src]=\\\"imagePath.value\\\" class=\\\"img-responsive\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description</label>\\n            <textarea type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\"\\n              rows=\\\"6\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingredients\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let ingredientCtrl of getControls(); let i = index\\\" [formGroupName]=\\\"i\\\"\\n            style=\\\"margin-top: 10px;\\\">\\n            <div class=\\\"col-xs-8\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"amount\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteIngredient(i)\\\">X</button>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onAddIngredient()\\\">Add Ingredient</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\n\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  recipeForm: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n              private recipeService: RecipeService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.id = +params['id'];\n          this.editMode = params['id'] != null;\n          this.initForm();\n        }\n      );\n  }\n\n  onSubmit() {\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/)\n        ])\n      })\n    );\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n\n  getControls() {\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              'name': new FormControl(ingredient.name, Validators.required),\n              'amount': new FormControl(ingredient.amount, [\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/)\n              ])\n            })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, Validators.required),\n      'imagePath': new FormControl(recipeImagePath, Validators.required),\n      'description': new FormControl(recipeDescription, Validators.required),\n      'ingredients': recipeIngredients\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"[index]\\\" routerLinkActive=\\\"active\\\" style=\\\"cursor:pointer\\\" class=\\\"list-group-item clearfix\\\">\\r\\n    <div class=\\\"pull-left\\\">\\r\\n        <h4 class=\\\"list-group-item-heading\\\">{{recipe.name}}</h4>\\r\\n        <p class=\\\"list-group-item-text\\\">{{recipe.description}}</p>\\r\\n    </div>\\r\\n    <span class=\\\"pull-right\\\">\\r\\n        <img [src]=\\\"recipe.imagePath\\\" alt=\\\"{{recipe.name}}\\\" class=\\\"img-responsive\\\" style=\\\"max-height:50px;\\\">\\r\\n    </span>\\r\\n</a>\"","import { Component, Input } from '@angular/core';\r\nimport { Recipe } from '../../recipe.model'\r\n\r\n@Component({\r\n    selector: 'app-recipe-item',\r\n    templateUrl: './recipe-item.component.html',\r\n    styleUrls: ['./recipe-item.component.css']\r\n})\r\nexport class RecipeItemComponent {\r\n    @Input() recipe: Recipe;\r\n    @Input() index: number;\r\n    constructor() { }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"onNewRecipe()\\\">New Recipe</button>\\r\\n    </div>\\r\\n</div>\\r\\n<hr>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <app-recipe-item *ngFor=\\\"let recipeEl of recipes ; let i=index\\\"\\r\\n         [recipe]=\\\"recipeEl\\\"\\r\\n         [index]=\\\"i\\\" ></app-recipe-item>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Recipe } from \"../recipe.model\";\r\nimport { RecipeService } from '../recipe.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-recipe-list',\r\n    templateUrl: './recipe-list.component.html',\r\n    styleUrls: ['./recipe-list.component.css']\r\n})\r\nexport class RecipeListComponent implements OnInit, OnDestroy {\r\n    //recipes: Recipe[] = [];\r\n    recipes;\r\n    subscription: Subscription;\r\n\r\n    constructor(private recipeService: RecipeService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private http: HttpClient) { };\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.recipeService.recipesChanged.subscribe((recipes) => {\r\n            this.recipes = recipes;\r\n        });\r\n        this.recipeService.getData().subscribe((recipes) => {\r\n            this.recipes = recipes;\r\n            this.recipeService.setData(recipes);\r\n        });;\r\n    }\r\n    onNewRecipe() {\r\n        this.router.navigate(['new'], { relativeTo: this.route });\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<h3>Please select a Recipe</h3>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Ingredient} from '../shared/ingredient.model';\r\n\r\nexport class Recipe {\r\n    public name: string;\r\n    public description: string;\r\n    public imagePath: string;\r\n    public ingredients:Ingredient[];\r\n\r\n    constructor(name: string, description: string, imagePath: string , ingredients :Ingredient[]) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.imagePath = imagePath;\r\n        this.ingredients=ingredients;\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { AuthGuard } from \"../auth/auth-guard.service\";\r\n\r\nconst recipesRoutes: Routes = [\r\n    {\r\n        path: '', component: RecipesComponent, children: [\r\n            { path: '', component: RecipeStartComponent },\r\n            { path: 'new', component: RecipeEditComponent, canActivate: [AuthGuard] },\r\n            { path: ':id', component: RecipeDetailComponent },\r\n            { path: ':id/edit', component: RecipeEditComponent, canActivate: [AuthGuard] }\r\n        ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(recipesRoutes)\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [AuthGuard]\r\n})\r\nexport class RecipesRoutingModule {\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n        <app-recipe-list></app-recipe-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-recipes',\r\n    templateUrl: './recipes.component.html',\r\n    styleUrls: ['./recipes.component.css']\r\n})\r\nexport class RecipesComponent implements OnInit {\r\n\r\n    constructor() { };\r\n\r\n    ngOnInit() {\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeItemComponent } from \"./recipe-list/recipe-item/recipe-item.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RecipesRoutingModule } from \"./recipes-routing.module\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        RecipesComponent,\r\n        RecipeListComponent,\r\n        RecipeDetailComponent,\r\n        RecipeItemComponent,\r\n        RecipeStartComponent,\r\n        RecipeEditComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        RecipesRoutingModule,\r\n        HttpClientModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class RecipesModule {\r\n\r\n}"],"sourceRoot":""}